<launch>
    <!-- Disable if running online and not from a bag/using gazebo simulation -->
  <param name="use_sim_time" value="false"/>

  <!-- Arguments -->
  <arg name="model" default="$(find robotics_lab2)/urdf/aut_car.urdf"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="/odom" />
  <arg name="move_forward_only" default="false"/>

  <arg name="map_file" default="$(find robotics_lab2)/maps/IST_map_disc.yaml"/>
  <arg name="open_rviz" default="true"/>

  <!--Robot Model Initialization--> 
  <param name="robot_description" command="$(find xacro)/xacro $(arg model)" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <rosparam param="source_list">["steering_state"]</rosparam>
  </node>

   <!-- Adding the my_map tf to the tf tree-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="my_map_to_map" args="0 0 0 0 0 0 1 /disc_map /map "/>

  <!-- Map server -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>

  <!--Navigation--> 
  <!-- The move_base node -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" clear_params="true" output="screen">

    <param name="base_global_planner" value="global_planner/GlobalPlanner" />
    <param name="GlobalPlanner/use_dijkstra" value="true" />
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

    <rosparam file="$(find robotics_lab2)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find robotics_lab2)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    
    <rosparam file="$(find robotics_lab2)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find robotics_lab2)/param/global_costmap_params.yaml" command="load" />

    <rosparam file="$(find robotics_lab2)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find robotics_lab2)/param/dwa_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>

  <!--Localisation--> 
  <node name="odometry_publisher" pkg="robotics_lab2" type="odom_publisher.py" />

  <!-- AMCL -->
  <include file="$(find robotics_lab2)/launch/amcl.launch"/>
  <!-- Call to global_localization service -->
  <node name="global_localization" pkg="rosservice" type="rosservice"  args="call --wait /global_localization"/>


   <!-- Run fake localization compatible with AMCL output -->
  <node pkg="fake_localization" type="fake_localization" name="fake_localization" clear_params="true" output="screen">
     <remap from="base_pose_ground_truth" to="odom" />
     <param name="global_frame_id" value="map" />
     <param name="base_frame_id" value="base_footprint" />
  </node>

  <!-- Rviz -->
  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find robotics_lab2)/rviz/test_aut_car.rviz"/>
  </group>

  <!--Get goals and viapoints through Rviz 2D Nav Goal tool-->
  <!--<node name="navigation_goals" pkg="robotics_lab2" type="navigation_goals.py" output="screen"/>-->

   <!-- Hector_trajectory_server -->
  <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="hector_trajectory_server" output="screen">
    <param name="target_frame_name" type="string" value="/map" />
    <param name="source_frame_name" type="string" value="/base_link" />
    <param name="trajectory_update_rate" type="double" value="4" />
    <param name="trajectory_publish_rate" type="double" value="0.25" />
  </node>

</launch>
